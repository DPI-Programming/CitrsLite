@page "/participant/add"
@using CitrsLite.Business.ViewModels.ParticipantViewModels
@using CitrsLite.Business.Enums
@using Microsoft.AspNetCore.Components.Authorization
@inject CitrsLite.Business.Services.ParticipantService participantService
@inject AuthenticationStateProvider authenticationStateProvider
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<h2 class="mb-5">Participant Form</h2>

<EditForm Model=@Model OnValidSubmit="CreateParticipant">
<DataAnnotationsValidator />
    <MudGrid>
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Name" Class="mt-3" @bind-Value="Model.Name" For="@(() => Model.Name)"/>
                <h3>Type</h3>
                <label class="mt-3">
                    <InputSelect Name="type" @bind-Value=Model.Type>
                        @foreach (var partType in Enum.GetValues(typeof(ParticipantType)))
                        {
                            <option Value="@partType">@partType.ToString().Replace("_", " ")</option>
                        }
                    </InputSelect>
                </label>
                @*<MudSelect T="string" Label="Type" AnchorOrigin="Origin.BottomCenter">
                    @foreach (var partType in Enum.GetValues(typeof(ParticipantType)))
                    {
                        <MudSelectItem Value="@partType">@partType.ToString().Replace("_"," ")</MudSelectItem>
                    }
                </MudSelect>*@
                <MudTextField T="string" Label="Description" Class="mt-3" Variant="Variant.Text" Lines="5" 
                    @bind-Value="Model.Description" For="@(() => Model.Description)" />
                <MudTextField Label="Phone Number" Class="mt-3" @bind-Value="Model.PhoneNumber" For="@(() => Model.PhoneNumber)" />
                <MudTextField Label="Address" Class="mt-3" @bind-Value="Model.Address" For="@(() => Model.Address)" />
                <MudTextField Label="City" Class="mt-3" @bind-Value="Model.City" For="@(() => Model.City)" />
                <MudTextField Label="State" Class="mt-3" @bind-Value="Model.State" For="@(() => Model.State)" />
                <MudCheckBox Label="Active?" Class="mt-3" @bind-Checked="@Model.IsActive" Color="Color.Primary"></MudCheckBox>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save</MudButton>
            </MudCardActions>
        </MudCard>
    </MudGrid>
</EditForm>

@code {
    private String Message = String.Empty;

    public void CreateParticipant()
    {
        participantService.CreateAysnc(Model);
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();

        Model.UserName = authState.User.Identity?.Name ?? "Unknown user";
    }

    [Inject]
    public ParticipantFormViewModel Model { get; set; }
}
